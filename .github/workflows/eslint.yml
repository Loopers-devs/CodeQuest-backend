name: ESLint

on:
  push:
    branches: [ main, master ]
  pull_request:
    types: [opened, synchronize, reopened]

permissions:
  contents: write

jobs:
  lint:
    name: Run ESLint and auto-fix
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: true

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm ci

      - name: Run Prettier (format)
        run: npm run format

      - name: Run ESLint (auto-fix)
        continue-on-error: true
        run: npm run lint || true

      - name: Commit and push fixes for same-repo PRs or pushes
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          # Only attempt to push when either this is a push event, or a PR from the same repository
          IS_PUSH=false
          IS_SAME_REPO_PR=false
          if [ "${{ github.event_name }}" = "push" ]; then
            IS_PUSH=true
          fi
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            if [ "${{ github.event.pull_request.head.repo.full_name }}" = "${{ github.repository }}" ]; then
              IS_SAME_REPO_PR=true
            fi
          fi

          if [ "$IS_PUSH" = true ] || [ "$IS_SAME_REPO_PR" = true ]; then
            echo "Target push ref:"
            if [ "$IS_PUSH" = true ]; then
              TARGET_REF="${{ github.ref_name }}"
              echo "push to branch: $TARGET_REF"
            else
              TARGET_REF="${{ github.event.pull_request.head.ref }}"
              echo "push to PR head ref: $TARGET_REF"
            fi

            if [ -n "$(git status --porcelain)" ]; then
              git add -A
              git commit -m "chore: apply Prettier & ESLint fixes by workflow" || echo "no changes to commit"

              # Try to push with a simple retry in case of transient failures
              set -e
              ATTEMPT=1
              MAX_ATTEMPTS=2
              until [ $ATTEMPT -gt $MAX_ATTEMPTS ]
              do
                echo "Attempt $ATTEMPT to push to $TARGET_REF"
                if git push origin HEAD:$TARGET_REF; then
                  echo "Push succeeded"
                  break
                else
                  echo "Push failed on attempt $ATTEMPT"
                  ATTEMPT=$((ATTEMPT+1))
                  sleep 1
                fi
              done
              if [ $ATTEMPT -gt $MAX_ATTEMPTS ]; then
                echo "Failed to push formatting/lint fixes after $MAX_ATTEMPTS attempts"
                exit 1
              fi
              set +e
            else
              echo "No formatting/lint fixes to commit"
            fi
          else
            echo "Not a push nor a same-repo PR; skipping push to avoid permissions issues"
          fi
          else
            echo "Not a push nor a same-repo PR; skipping push to avoid permissions issues"
          fi
